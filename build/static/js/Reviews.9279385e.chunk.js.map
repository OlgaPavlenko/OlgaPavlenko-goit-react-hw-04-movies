{"version":3,"sources":["views/Reviews/Reviews.js"],"names":["Reviews","movieId","useState","review","setReview","useEffect","moviesAPI","then","request","catch","results","length","map","item","index","author","content"],"mappings":"wMAGe,SAASA,EAAT,GAA+B,IAAZC,EAAW,EAAXA,QAAW,EACfC,mBAAS,MADM,mBACpCC,EADoC,KAC5BC,EAD4B,KAY3C,OATAC,qBAAU,WACRC,IACqBL,GAClBM,MAAK,SAACC,GACLJ,EAAUI,MAEXC,UACF,CAACR,IAGF,mCACGE,GAAUA,EAAOO,QAAQC,OACxB,8BACE,6BACGR,EAAOO,QAAQE,KAAI,SAACC,EAAMC,GAAP,OAClB,mCACE,+BACE,6BAAKD,EAAKE,SACV,kCAAKF,EAAKG,aAFHF,YASjB","file":"static/js/Reviews.9279385e.chunk.js","sourcesContent":["import * as moviesAPI from \"../../services/movie-api\";\nimport { useState, useEffect } from \"react\";\n\nexport default function Reviews({ movieId }) {\n  const [review, setReview] = useState(null);\n\n  useEffect(() => {\n    moviesAPI\n      .fetchMovieReviews(movieId)\n      .then((request) => {\n        setReview(request);\n      })\n      .catch();\n  }, [movieId]);\n\n  return (\n    <>\n      {review && review.results.length ? (\n        <div>\n          <ul>\n            {review.results.map((item, index) => (\n              <>\n                <li key={index}>\n                  <h1>{item.author}</h1>\n                  <p> {item.content}</p>\n                </li>\n              </>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <p>There are no reviews for this movie</p>\n      )}\n    </>\n  );\n}\n"],"sourceRoot":""}